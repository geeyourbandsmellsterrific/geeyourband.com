---
import { marked } from "marked";
import { getCollection, getEntries } from "astro:content";
import BaseLayout from "src/layouts/BaseLayout.astro";
import CardMember from "@components/CardMember.astro";
import { Image } from "astro:assets";
import { formatDate } from "@js/utils";

export async function getStaticPaths() {
  const events = await getCollection("event");
  return events.map((event) => ({
    params: { event: event.slug },
    props: { event: event },
  }));
}

const { event } = Astro.props;
const content = await marked.parse(
  event.body.replace(/\n(?=\n)/g, "\n\n<br/>\n"),
);

const members = (await getEntries(event.data.member)).filter(member => member.collection === "member");
---

<BaseLayout
  title={event.data.title}
  description={event.body
    .split(" ")
    .slice(0, 20)
    .join(" ")
    .replace(/[#*_\`]/g, "")
    .replace(/\[([^\]]+)\]\([^\)]+\)/g, "$1")
    .trim() + (event.body.split(" ").length > 20 && "...")}
>
  <article id="event" class="mx-auto px-3 pt-16 max-[460px]:pt-10 pb-32 max-w-4xl">
    {
      event.data.image && (
        <picture>
          <Image
            src={event.data.image}
            alt={event.data.imageAlt ? event.data.imageAlt : event.data.title}
            width={event.data.image.width}
            height={event.data.image.height}
            decoding="async"
            class="rounded-lg w-full h-auto"
          />
        </picture>
      )
    }

    <section id="event-details" class="flex flex-col gap-4 mt-8">
      <h1 id={event.data.title}>{event.data.title}</h1>
      <div>
        {
          event.data.date && (
            <p>
              {formatDate(event.data.date)} by
              {members.length === 1 ? (
                <a
                  href={"/" + members[0].slug}
                  title={members[0].data.name}
                >
                  <span
                    id={members[0].data.name + "-name"}
                  >
                    <strong>{members[0].data.name}</strong>
                  </span>
                </a>
              ) : members.length === 2 ? (
                <a
                  href={"/" + members[0].slug}
                  title={members[0].data.name}
                >
                  <span
                    id={members[0].data.name + "-name"}
                  ><strong>{members[0].data.name}</strong></span></a> <span>and</span> <a
                  href={"/" + members[1].slug}
                  title={members[1].data.name}
                >
                  <span
                    id={members[1].data.name + "-name"}
                  >
                    <strong>{members[1].data.name}</strong>
                  </span>
                </a>
              ) : (
                members.map((member, index) => (
                  <span>
                  <a
                    href={"/" + member.slug}
                    title={member.data.name}
                  ><span
                    id={member.data.name + "-name"}
                    ><strong>{member.data.name}</strong></span></a>
                  {index < members.length - 2 && ", "}
                  {index === members.length - 2 && ", and "}
                  </span>
                ))
              )}
            </p>
          )
        }
      </div>
    </div>

    <section id="event-content" class="my-8 overflow-auto">
      <p set:html={content} />
    </section>

    <section id="event-members" class="flex flex-col justify-left items-start gap-4 mt-2">
      {members.map((member, index) => <CardMember index={index} member={member} />)}
    </section>
  </article>
</BaseLayout>