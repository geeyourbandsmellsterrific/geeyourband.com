---
import { getCollection } from "astro:content";
import HomeLayout from "src/layouts/HomeLayout.astro";
import CardMember from "@components/CardMember.astro";
import CardShow from "@components/CardShow.astro";
import { Image } from "astro:assets";
import { marked } from "marked";

const details = await getCollection("details");
const homepage_content = await marked.parse(
  details[0].data.homepage_content?.replace(/\n(?=\n)/g, "\n\n<br/>\n") || "",
);
const tip_content = await marked.parse(
  details[0].data.tip_content?.replace(/\n(?=\n)/g, "\n\n<br/>\n") || "",
);
const book_content = await marked.parse(
  details[0].data.book_content?.replace(/\n(?=\n)/g, "\n\n<br/>\n") || "",
);
const members = (await getCollection("member"))
  .filter((member) => member.data.main !== false)
  .sort((a, b) => (a.data.order ?? 0) - (b.data.order ?? 0));

const today = new Date();
today.setHours(0, 0, 0, 0);

const shows = (await getCollection("show"))
  .filter((show) => {
    // Parse "Sat, Jun 19" as MM-DD of current year
    const [_, monthStr, dayStr] = show.data.startDate.split(" ");
    const month = new Date(`${monthStr} 1, 2000`).getMonth(); // get month index
    const day = parseInt(dayStr, 10);
    const year = new Date().getFullYear();

    // Determine timezone offset in hours
    let tzOffset = 0;
    switch (show.data.timezone) {
      case "EDT":
      case "EST":
        tzOffset = -4; // EDT is UTC-4, EST is UTC-5, but for summer assume -4
        break;
      case "CDT":
      case "CST":
        tzOffset = -5; // CDT is UTC-5, CST is UTC-6, but for summer assume -5
        break;
      case "MDT":
      case "MST":
        tzOffset = -6; // MDT is UTC-6, MST is UTC-7, but for summer assume -6
        break;
      case "PDT":
      case "PST":
        tzOffset = -7; // PDT is UTC-7, PST is UTC-8, but for summer assume -7
        break;
      default:
        tzOffset = 0;
    }

    // Create show date in UTC, then adjust for timezone
    const showDate = new Date(Date.UTC(year, month, day));
    showDate.setUTCHours(0, 0, 0, 0);
    showDate.setUTCHours(showDate.getUTCHours() - tzOffset);

    // Get today's date in UTC for comparison
    const todayUTC = new Date();
    todayUTC.setUTCHours(0, 0, 0, 0);

    return showDate >= todayUTC;
  })
  .sort((a, b) => {
    const [_, amonthStr, adayStr] = a.data.startDate.split(" ");
    const [__, bmonthStr, bdayStr] = b.data.startDate.split(" ");
    const year = new Date().getFullYear();

    let aOffset = 0,
      bOffset = 0;
    switch (a.data.timezone) {
      case "EDT":
      case "EST":
        aOffset = -4;
        break;
      case "CDT":
      case "CST":
        aOffset = -5;
        break;
      case "MDT":
      case "MST":
        aOffset = -6;
        break;
      case "PDT":
      case "PST":
        aOffset = -7;
        break;
      default:
        aOffset = 0;
    }
    switch (b.data.timezone) {
      case "EDT":
      case "EST":
        bOffset = -4;
        break;
      case "CDT":
      case "CST":
        bOffset = -5;
        break;
      case "MDT":
      case "MST":
        bOffset = -6;
        break;
      case "PDT":
      case "PST":
        bOffset = -7;
        break;
      default:
        bOffset = 0;
    }

    const adate = new Date(
      Date.UTC(
        year,
        new Date(`${amonthStr} 1, 2000`).getMonth(),
        parseInt(adayStr, 10),
      ),
    );
    adate.setUTCHours(0, 0, 0, 0);
    adate.setUTCHours(adate.getUTCHours() - aOffset);

    const bdate = new Date(
      Date.UTC(
        year,
        new Date(`${bmonthStr} 1, 2000`).getMonth(),
        parseInt(bdayStr, 10),
      ),
    );
    bdate.setUTCHours(0, 0, 0, 0);
    bdate.setUTCHours(bdate.getUTCHours() - bOffset);

    return adate.getTime() - bdate.getTime();
  });
---

<HomeLayout
  title={details[0].data.name}
  description={details[0].data.description}
>
  {/* Hero Section */}
  <section class="relative flex justify-center items-center h-screen">
    <div class="z-0 absolute inset-0 animate-move-up">
      <div
        class="z-10 absolute inset-0 bg-linear-to-b from-purple-900/70 to-black/90"
      >
      </div>
      <div
        class="absolute inset-0 bg-[url('/assets/images/pattern.webp')] opacity-10 animate-pulse-beat"
      >
      </div>
      {/* Fade to black at bottom */}
      <div
        class="right-0 bottom-0 left-0 absolute bg-gradient-to-b from-transparent to-black h-32 pointer-events-none"
      >
      </div>
    </div>
    <div class="z-20 relative px-4 text-center container">
      <section
        id="hero-logo"
        class="flex flex-col justify-center items-center mx-3 text-center align-middle"
      >
        <Image
          src="/assets/svgs/logo.svg"
          alt={details[0].data.name}
          width={350}
          height={350}
          loading="eager"
          class="bg-transparent drop-shadow-sm font-bold text-white text-3xl md:text-5xl fredoka"
        />
      </section>
      <h1
        class="bg-clip-text bg-linear-to-r from-orange-400 via-pink-500 to-purple-600 mx-auto mb-6 pb-1 max-w-[362px] md:max-w-[736px] font-extrabold text-transparent text-3xl md:text-5xl"
      >
        {details[0].data.description}
      </h1>
      <div class="flex flex-col justify-center items-center gap-4">
        <div class="flex flex-wrap justify-center gap-4">
          <a
            href="#upcoming-shows"
            aria-label="Upcoming Shows"
            title="Upcoming Shows"
            class="bg-linear-to-r from-purple-500 hover:from-purple-600 to-pink-500 hover:to-pink-600 border-0 text-white button"
          >
            Upcoming Shows
          </a>
          <a
            href="#book-us"
            aria-label="Book Us"
            title="Book Us"
            class="bg-linear-to-r from-pink-500 hover:from-pink-600 to-orange-500 hover:to-orange-600 border-0 text-white button"
          >
            Book Us
          </a>
        </div>
        <a
          href="#tip"
          aria-label="Leave a Tip"
          title="Leave a Tip"
          class="bg-linear-to-r from-pink-500 hover:from-pink-600 to-purple-500 hover:to-purple-600 border-0 text-white button"
        >
          Leave a Tip
        </a>
      </div>
    </div>
    <div
      class="right-0 bottom-12 left-0 absolute flex justify-center animate-bounce arrow-continue"
    >
      <a
        href="#content"
        aria-label="Scroll Down"
        title="Scroll Down"
        class="text-yellow-400 hover:text-yellow-500 hover:scale-125 transition-transform transform"
      >
        <svg
          width="24"
          height="24"
          viewBox="0 0 24 24"
          fill="none"
          stroke="currentColor"
          stroke-width="2"
          stroke-linecap="round"
          stroke-linejoin="round"
          class="text-yellow-400"
        >
          <path d="M12 5v14M5 12l7 7 7-7"></path>
        </svg>
      </a>
    </div>
  </section>

  {/* Content Section */}
  <section id="content" class="relative bg-black pt-20 pb-32">
    <div class="absolute inset-0 bg-black opacity-10"></div>
    <div class="z-10 relative mx-auto px-4 container">
      <div class="flex items-center mb-12">
        <div class="flex-1 bg-linear-to-r from-transparent to-purple-500 h-px">
        </div>
        <h2
          class="flex items-center gap-2 px-4 font-bold text-yellow-300 text-3xl md:text-4xl text-center"
        >
          <span>{details[0].data.homepage_title}</span>
        </h2>
        <div class="flex-1 bg-linear-to-l from-transparent to-purple-500 h-px">
        </div>
      </div>

      <section
        id="blog-post-content"
        class="mx-auto max-w-[700px] text-stone-200"
      >
        <p set:html={homepage_content} />
      </section>
    </div>
  </section>

  {/* Band Members Section */}
  <section id="band-members" class="relative bg-black pb-32">
    <div class="absolute inset-0 bg-black opacity-10"></div>
    <div class="z-10 relative mx-auto px-4 container">
      <div class="flex items-center mb-12">
        <div class="flex-1 bg-linear-to-r from-transparent to-purple-500 h-px">
        </div>
        <h2
          class="flex items-center gap-2 px-4 font-bold text-yellow-300 text-3xl md:text-4xl text-center"
        >
          <span>MEET THE BAND</span>
        </h2>
        <div class="flex-1 bg-linear-to-l from-transparent to-purple-500 h-px">
        </div>
      </div>

      <div class="gap-6 grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3">
        {
          members.map((member, index) => (
            <CardMember index={index} member={member} />
          ))
        }
      </div>
    </div>
  </section>

  {/* Upcoming Shows Section */}
  {
    shows.length !== 0 && (
      <section
        id="upcoming-shows"
        class="relative bg-linear-to-b from-black to-purple-950/30 pt-20 pb-32"
      >
        <div class="absolute inset-0 bg-[url('/assets/images/pattern.webp')] opacity-5">
          {/* Fade to black at top */}
          <div class="top-0 right-0 left-0 absolute bg-gradient-to-t from-transparent to-black h-16 pointer-events-none" />
        </div>
        <div class="z-10 relative mx-auto px-4 container">
          <div class="flex items-center">
            <div class="flex-1 bg-linear-to-r from-transparent to-pink-500 h-px" />
            <h2 class="flex items-center gap-2 px-4 font-bold text-yellow-300 text-3xl md:text-4xl text-center">
              <span>
                {shows.length > 1 ? "UPCOMING SHOWS" : "UPCOMING SHOW"}
              </span>
            </h2>
            <div class="flex-1 bg-linear-to-l from-transparent to-pink-500 h-px" />
          </div>
          <div
            id="upcoming-shows-list"
            class="flex flex-col justify-center items-stretch gap-8 px-10 pt-12 pb-4 w-full max-w-[1400px] overflow-hidden text-center"
          >
            {shows.slice(0, 6).map((show, index) => (
              <CardShow show={show} index={index} />
            ))}
          </div>

          {shows.length > 6 && (
            <div class="mt-8 text-center">
              <a
                href="/shows"
                class="bg-yellow-400/10 hover:bg-yellow-400/30 border-yellow-400 text-yellow-400 button"
              >
                View All Shows
              </a>
            </div>
          )}
        </div>
      </section>
    )
  }

  {/* Tip Section */}
  <section
    id="tip"
    class="relative bg-black pt-52 pb-32 border-purple-900/50 border-t"
  >
    <div class="absolute inset-0 bg-black opacity-10"></div>
    <div class="z-10 relative mx-auto px-4 container">
      <div class="flex items-center mb-12">
        <div class="flex-1 bg-linear-to-r from-transparent to-orange-500 h-px">
        </div>
        <h2
          class="flex items-center gap-2 px-4 font-bold text-yellow-300 text-3xl md:text-4xl text-center"
        >
          <span>{details[0].data.tip_title}</span>
        </h2>
        <div class="flex-1 bg-linear-to-l from-transparent to-orange-500 h-px">
        </div>
      </div>

      <div
        class="flex flex-col gap-10 bg-linear-to-br from-purple-900/40 to-black mx-auto px-3 py-12 border border-purple-500/30 rounded-lg max-w-2xl text-center"
      >
        <span class="mx-auto max-w-96 text-blue-400 text-xl"
          ><p set:html={tip_content} /></span
        >
        <div
          class="flex flex-col justify-center items-center mx-auto w-full text-center align-middle"
        >
          <a
            href={details[0].data.link_venmo}
            target="_blank"
            rel="noopener"
            title="Leave a tip using Venmo"
            class="bg-[#0c122c] px-10 py-6 border border-blue-400/40 hover:border-blue-300 button"
          >
            <Image
              src="/assets/svgs/venmo.svg"
              alt="Venmo"
              width={194}
              height={36}
              decoding="async"
              loading="lazy"
              class="bg-[#0c122c] text-white text-2xl"
            />
          </a>
        </div>
      </div>
    </div>
  </section>

  {/* Book Us Section */}
  <section
    id="book-us"
    class="relative bg-linear-to-b from-black to-purple-950/30 pt-32 pb-44"
  >
    <div
      class="absolute inset-0 bg-[url('/assets/images/pattern.webp')] opacity-5"
    >
      {/* Fade to black at top */}
      <div
        class="top-0 right-0 left-0 absolute bg-gradient-to-t from-transparent to-black h-20 pointer-events-none"
      >
      </div>
    </div>
    <div class="z-10 relative mx-auto px-4 container">
      <div class="flex items-center mb-12">
        <div class="flex-1 bg-linear-to-r from-transparent to-yellow-500 h-px">
        </div>
        <h2
          class="flex items-center gap-2 px-4 font-bold text-yellow-300 text-3xl md:text-4xl text-center"
        >
          <span>BOOK US</span>
        </h2>
        <div class="flex-1 bg-linear-to-l from-transparent to-yellow-500 h-px">
        </div>
      </div>

      <div class="gap-8 grid md:grid-cols-2 mx-auto max-w-3xl">
        <div class="flex flex-col items-start gap-6">
          <div class="flex flex-col items-start gap-0">
            <h3 class="font-bold text-pink-400 text-2xl">
              {details[0].data.book_title}
            </h3>
            <span class="text-yellow-100"><p set:html={book_content} /></span>
          </div>
          <ul class="space-y-2">
            {
              details[0].data.book_bullets.map((item, index) => (
                <li
                  id={"band-features-" + index}
                  class="flex items-center gap-2"
                >
                  <div class="bg-pink-500 rounded-full w-2 h-2" />
                  <span>{item}</span>
                </li>
              ))
            }
          </ul>
        </div>
        <div
          class="bg-linear-to-br from-purple-900/40 to-black p-6 border border-purple-500/30 rounded-lg"
        >
          <form
            class="space-y-10"
            name="book"
            method="POST"
            data-netlify="true"
            action="/book-thanks"
          >
            <div class="space-y-2">
              <label for="name" class="font-medium text-yellow-200 text-sm"
                >Name</label
              >
              <input
                id="name"
                name="name"
                placeholder="Your Name"
                type="text"
                class="bg-black/50 px-3 py-2 border border-purple-500/50 rounded-md focus:outline-hidden focus:ring-2 focus:ring-pink-500 w-full"
              />
            </div>
            <div class="space-y-2">
              <label for="email" class="font-medium text-yellow-200 text-sm"
                >Email</label
              >
              <input
                id="email"
                name="email"
                placeholder="Your Email"
                type="email"
                class="bg-black/50 px-3 py-2 border border-purple-500/50 rounded-md focus:outline-hidden focus:ring-2 focus:ring-pink-500 w-full"
              />
            </div>
            <div class="space-y-2">
              <label for="date" class="font-medium text-yellow-200 text-sm"
                >Show Date</label
              >
              <input
                id="date"
                name="date"
                type="date"
                class="bg-black/50 px-3 py-2 border border-purple-500/50 rounded-md focus:outline-hidden focus:ring-2 focus:ring-pink-500 w-full text-white"
              />
            </div>
            <div class="space-y-2">
              <label for="message" class="font-medium text-yellow-200 text-sm"
                >Message</label
              >
              <textarea
                id="message"
                name="message"
                placeholder="Tell us about your show"
                rows={4}
                class="bg-black/50 px-3 py-2 border border-purple-500/50 rounded-md focus:outline-hidden focus:ring-2 focus:ring-pink-500 w-full"
              ></textarea>
            </div>
            <button
              type="submit"
              aria-label="Send Inquiry"
              id="send-inquiry"
              title="Send Inquiry"
              class="bg-linear-to-r from-yellow-500 hover:from-yellow-600 to-orange-500 hover:to-orange-600 w-full font-bold text-black cursor-pointer button"
            >
              Send Inquiry
            </button>
          </form>
        </div>
      </div>
    </div>
  </section>
</HomeLayout>
